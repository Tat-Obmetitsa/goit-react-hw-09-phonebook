{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","RegisterView","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","console","warn","className","s","form__title","onSubmit","e","preventDefault","authOperations","register","autoComplete","form","form__label","type","onChange","form__input","pattern","form__button"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,2BAA2B,YAAc,kCAAkC,YAAc,kCAAkC,YAAc,kCAAkC,aAAe,qC,6ICMpM,SAASC,IAAiB,IAAD,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,OAEZF,mBAAS,IAFG,mBAE/BG,EAF+B,KAExBC,EAFwB,OAGNJ,mBAAS,IAHH,mBAG/BK,EAH+B,KAGrBC,EAHqB,KAKhCC,EAAWC,cAIXC,EAAe,SAAC,GAAkC,IAAD,IAA/BC,OAAUT,EAAqB,EAArBA,KAAMT,EAAe,EAAfA,MACtC,OAAQS,GACN,IAAK,OACH,OAAOC,EAAQV,GACjB,IAAK,QACH,OAAOY,EAASZ,GAClB,IAAK,WACH,OAAOc,EAAYd,GACrB,QACE,YADQmB,QAAQC,KAAR,iBAAuBX,EAAvB,yBAYZ,OACE,gCACE,oBAAIY,UAAWC,IAAEC,YAAjB,0BAEA,uBACEC,SAZa,SAAAC,GACnBA,EAAEC,iBACFX,EAASY,IAAeC,SAAS,CAAEnB,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAQNe,aAAa,MACbR,UAAWC,IAAEQ,KAHf,UAKE,wBAAOT,UAAWC,IAAES,YAApB,iBAEE,uBACEC,KAAK,OACLvB,KAAK,OACLT,MAAOS,EACPwB,SAAUhB,EACVI,UAAWC,IAAEY,iBAIjB,wBAAOb,UAAWC,IAAES,YAApB,kBAEE,uBACEC,KAAK,QACLvB,KAAK,QACL0B,QAAQ,8BACRnC,MAAOW,EACPsB,SAAUhB,EACVI,UAAWC,IAAEY,iBAIjB,wBAAOb,UAAWC,IAAES,YAApB,qBAEE,uBACEC,KAAK,WACLvB,KAAK,WACLT,MAAOa,EACPoB,SAAUhB,EACVI,UAAWC,IAAEY,iBAIjB,wBAAQF,KAAK,SAASX,UAAWC,IAAEc,aAAnC","file":"static/js/7.5be57e7f.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__1yuUi\",\"form__title\":\"RegisterView_form__title__33dje\",\"form__label\":\"RegisterView_form__label__17fue\",\"form__input\":\"RegisterView_form__input__3ygcp\",\"form__button\":\"RegisterView_form__button__2GeQO\"};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth';\r\nimport s from './RegisterView.module.css';\r\n\r\n\r\n\r\nexport default function RegisterView () {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n\r\n  const handleChange = ({ target: { name, value } }) =>  {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:  console.warn(`Option ${name} is not processed!`);\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }))\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n    return (\r\n      <div >\r\n        <h1 className={s.form__title}>Registration</h1>\r\n\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n          className={s.form}\r\n        >\r\n          <label className={s.form__label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              className={s.form__input}\r\n            />\r\n          </label>\r\n\r\n          <label className={s.form__label} >\r\n            Email\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              pattern=\"[^@]+@[^@]+\\.[a-zA-Z]{2,6}\"\r\n              value={email}\r\n              onChange={handleChange}\r\n              className={s.form__input}\r\n            />\r\n          </label>\r\n\r\n          <label className={s.form__label}>\r\n            Password\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              className={s.form__input}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={s.form__button}>Sign in</button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n// Without hooks\r\n\r\n// import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { authOperations } from '../../redux/auth';\r\n// import s from './RegisterView.module.css';\r\n\r\n\r\n\r\n// class RegisterView extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onRegister(this.state);\r\n\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n\r\n//     return (\r\n//       <div >\r\n//         <h1 className={s.form__title}>Registration</h1>\r\n\r\n//         <form\r\n//           onSubmit={this.handleSubmit}\r\n//           autoComplete=\"off\"\r\n//           className={s.form}\r\n//         >\r\n//           <label className={s.form__label}>\r\n//             Name\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={name}\r\n//               onChange={this.handleChange}\r\n//               className={s.form__input}\r\n//             />\r\n//           </label>\r\n\r\n//           <label className={s.form__label} >\r\n//             Email\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               pattern=\"[^@]+@[^@]+\\.[a-zA-Z]{2,6}\"\r\n//               value={email}\r\n//               onChange={this.handleChange}\r\n//               className={s.form__input}\r\n//             />\r\n//           </label>\r\n\r\n//           <label className={s.form__label}>\r\n//             Password\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={this.handleChange}\r\n//               className={s.form__input}\r\n//             />\r\n//           </label>\r\n\r\n//           <button type=\"submit\" className={s.form__button}>Sign in</button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps )(RegisterView);"],"sourceRoot":""}
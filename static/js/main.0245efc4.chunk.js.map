{"version":3,"sources":["redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Container/Container.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","redux/error-reducer.js","redux/store.js","components/Container/Container.js","routes/routes.js","components/Navigation/Navigation.js","images/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/App/App.js","index.js"],"names":["initialUserState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","isAuthenticated","registerError","loginError","getCurrentUserError","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logOut","logoutRequest","logoutError","logIn","loginRequest","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getIsAuthenticated","state","Boolean","getUsername","module","exports","fetchContacts","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContact","number","contact","addContactRequest","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getAllContacts","contacts","items","getFilter","filter","getIsLoading","loading","filterContacts","createSelector","normalizedFilter","toLowerCase","includes","id","changeFilter","createAction","setError","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","persistor","persistStore","Container","children","className","s","div","routes","home","login","nav","display","alignItems","flexDirection","textAlighn","link","fontFamily","fontSize","textDecoration","padding","fontWeight","color","activeLink","svg","width","height","Navigation","useSelector","authSelectors","style","to","exact","activeStyle","container","textAlign","avatar","borderRadius","margin","marginRight","marginLeft","background","cursor","UserMenu","useDispatch","onLogout","useCallback","authOperations","src","defaultAvatar","alt","onClick","AuthNav","styles","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0245efc4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated\r\n});","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = state => Boolean(state.auth.token);\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\n\r\n // eslint-disable-next-line \r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Container_div__6LbJa\",\"loading\":\"Container_loading__1GRAn\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n  //   .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n\n};\n\nconst deleteContact = (contactId) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// eslint-disable-next-line\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from 'reselect';\n\nconst getIsLoading = (state) => state.contacts.loading;\n\nconst getAllContacts = (state) => state.contacts.items;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst filterContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n\n// eslint-disable-next-line\nexport default { getIsLoading, getAllContacts, getFilter, filterContacts };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest'\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess'\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest'\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess'\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from './auth/auth-actions';\r\nimport {\r\n  fetchContactsError,\r\n  addContactError,\r\n  deleteContactError\r\n} from './contacts/contacts-actions';\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n  [fetchContactsError]: setError,\r\n  [addContactError]: setError,\r\n  [deleteContactError]: setError,\r\n});\r\n\r\nexport default error;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\nimport error from './error-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n    error: error\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n // eslint-disable-next-line \r\nexport default { store, persistor };","import React from 'react';\r\nimport s from '../Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.div}>{children}</div>;\r\n\r\nexport default Container;","const routes = {\r\n    home: '/',\r\n    register: '/register',\r\n    login: '/login',\r\n    contacts: '/contacts',\r\n  };\r\n  export default routes;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport {routes} from '../../routes';\r\nimport {authSelectors} from '../../redux/auth';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\n\r\nconst s  = {\r\n  nav: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    textAlighn: 'center'\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n    fontFamily: 'Dancing Script, cursive',\r\n    fontSize: 25,\r\n    flexDirection: 'row',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n  svg: {\r\n    width: 40,\r\n    height: 40\r\n  }\r\n};\r\nexport default function Navigation () {\r\n  \r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n  <nav style={s.nav}>\r\n    <NavLink to={routes.home} exact\r\n          style={s.link}\r\n          activeStyle={s.activeLink} >\r\n            <HomeOutlinedIcon style={s.svg} />\r\n    </NavLink>\r\n    {isAuthenticated && <NavLink\r\n      to={routes.contacts}\r\n      exact\r\n      style={s.link}\r\n      activeStyle={s.activeLink}\r\n    >\r\n      Contacts\r\n    </NavLink>}\r\n  </nav>)\r\n};\r\n\r\n\r\n\r\n// Without hooks\r\n\r\n// import React from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// import {routes} from '../../routes';\r\n// import {authSelectors} from '../../redux/auth';\r\n// import HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\n\r\n// const s  = {\r\n//   nav: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     flexDirection: 'row',\r\n//     textAlighn: 'center'\r\n//   },\r\n//   link: {\r\n//     display: 'flex',\r\n//     fontFamily: 'Dancing Script, cursive',\r\n//     fontSize: 25,\r\n//     flexDirection: 'row',\r\n//     textDecoration: 'none',\r\n//     padding: 12,\r\n//     fontWeight: 700,\r\n//     color: '#2A363B',\r\n//   },\r\n//   activeLink: {\r\n//     color: '#E84A5F',\r\n//   },\r\n//   svg: {\r\n//     width: 40,\r\n//     height: 40\r\n//   }\r\n// };\r\n// const Navigation = ({isAuthenticated}) => (\r\n//   <nav style={s.nav}>\r\n    \r\n//     <NavLink to={routes.home} exact\r\n//           style={s.link}\r\n//           activeStyle={s.activeLink} >\r\n//             <HomeOutlinedIcon style={s.svg} />\r\n//     </NavLink>\r\n//     {isAuthenticated && <NavLink\r\n//       to={routes.contacts}\r\n//       exact\r\n//       style={s.link}\r\n//       activeStyle={s.activeLink}\r\n//     >\r\n//       Contacts\r\n//     </NavLink>}\r\n   \r\n//   </nav>\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n\r\n// export default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.0c07a2e4.png\";","import React, {useCallback} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from '../../images/default-avatar.png';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\n\r\nconst s = {\r\n  container: {\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n    fontWeight: 700,\r\n    fontSize: 15,\r\n    color: '#813a5a'\r\n},\r\n  avatar: {\r\n    borderRadius: '50%',\r\n    margin: 0\r\n  },\r\n  name: {\r\n    marginRight: 12,\r\n    marginLeft: 12\r\n  },\r\n  svg: {\r\n    width: 30,\r\n    height: 30,\r\n    display: 'block',\r\n    background: 'transparent',\r\n    color: '#E84A5F',\r\n    cursor: 'pointer'\r\n  }\r\n}\r\nexport default function UserMenu ()  {\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [dispatch]);\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (<div style={s.container}>\r\n    <img \r\n    src={defaultAvatar}\r\n    style={s.avatar}\r\n    alt=\"default avatar\" \r\n    width=\"32\" />\r\n    <span style={s.name}>Welcome, {name}</span>\r\n    <ExitToAppOutlinedIcon onClick={onLogout} style={s.svg} />\r\n  </div>)\r\n};\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUsername(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n\r\n\r\n\r\n// Without hooks\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { authSelectors, authOperations } from '../../redux/auth';\r\n// import defaultAvatar from '../../images/default-avatar.png';\r\n// import ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\n\r\n// const s = {\r\n//   container: {\r\n//     display: 'flex',\r\n//     textAlign: 'center',\r\n//     alignItems: 'center',\r\n//     fontWeight: 700,\r\n//     fontSize: 15,\r\n//     color: '#813a5a'\r\n// },\r\n//   avatar: {\r\n//     borderRadius: '50%',\r\n//     margin: 0\r\n//   },\r\n//   name: {\r\n//     marginRight: 12,\r\n//     marginLeft: 12\r\n//   },\r\n//   svg: {\r\n//     width: 30,\r\n//     height: 30,\r\n//     display: 'block',\r\n//     background: 'transparent',\r\n//     color: '#E84A5F',\r\n//     cursor: 'pointer'\r\n//   }\r\n// }\r\n// const UserMenu = ({ avatar, name, onLogout }) => (\r\n//   <div style={s.container}>\r\n//     <img \r\n//     src={avatar}\r\n//     style={s.avatar}\r\n//     alt=\"default avatar\" \r\n//     width=\"32\" />\r\n//     <span style={s.name}>Welcome, {name}</span>\r\n//     <ExitToAppOutlinedIcon onClick={onLogout} style={s.svg} />\r\n//   </div>\r\n// );\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUsername(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {routes} from '../../routes';\r\n\r\nconst s = {\r\n  link: {\r\n    fontFamily: 'Dancing Script, cursive',\r\n    fontSize: 25,\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F'\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n    <div  >\r\n      <NavLink\r\n        to={routes.register}\r\n        exact\r\n        style={s.link}\r\n        activeStyle={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to={routes.login}\r\n        exact\r\n        style={s.link}\r\n        activeStyle={s.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n  \r\n  export default AuthNav;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n    width: 'inherit'\r\n  },\r\n};\r\n\r\nexport default function AppBar () {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (<header  style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>)\r\n};\r\n\r\n\r\n\r\n// Without hooks\r\n\r\n// import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import Navigation from '../Navigation';\r\n// import UserMenu from '../UserMenu';\r\n// import AuthNav from '../AuthNav';\r\n// import { authSelectors } from '../../redux/auth';\r\n\r\n// const styles = {\r\n//   header: {\r\n//     display: 'flex',\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     alignItems: 'center',\r\n//     borderBottom: '1px solid #2A363B',\r\n//     width: 'inherit'\r\n//   },\r\n// };\r\n// const AppBar = ({ isAuthenticated }) => (\r\n//   <header  style={styles.header}>\r\n//     <Navigation />\r\n//     {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n//   </header>\r\n// );\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n// })\r\n\r\n\r\n// export default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\n export default function PrivateRoute ({\r\n  redirectTo,\r\n  children, \r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n    {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n</Route>\r\n  )};\r\n\r\n\r\n\r\n\r\n\r\n// Without hooks\r\n\r\n\r\n// import React from 'react';\r\n// import { Route, Redirect } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// import { authSelectors } from '../redux/auth';\r\n\r\n// /**\r\n//  * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n//  * - В противном случае рендерит Redirect на /login\r\n//  */\r\n// const PrivateRoute = ({\r\n//   component: Component,\r\n//   isAuthenticated,\r\n//   redirectTo,\r\n//   ...routeProps\r\n// }) => (\r\n//   <Route\r\n//     {...routeProps}\r\n//     render={props =>\r\n//       isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n//     }\r\n//   />\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute ({\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n  <Route {...routeProps}> \r\n  {isAuthenticated && routeProps.restricted \r\n  ? (<Redirect to={redirectTo} /> ) \r\n  : (children)} \r\n  </Route>\r\n)};\r\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Container from '../Container';\nimport AppBar from '../AppBar/AppBar.js';\nimport {routes} from '../../routes';\nimport { authOperations } from '../../redux/auth';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\nimport s from '../Container/Container.module.css';\n\nconst HomeView = lazy(() => import('../../views/HomeView/HomeView.js'));\nconst RegisterView = lazy(() => import('../../views/RegisterView/RegisterView.js'));\nconst LoginView = lazy(() => import('../../views/LoginView/LoginView.js'));\nconst ContactsView = lazy(() => import('../../views/ContactsView/ContactsView.js'));\n\nexport default function App () {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<p className={s.loading}>Loading...</p>}>\n        <Switch>\n          <PublicRoute exact path={routes.home}> <HomeView /> </PublicRoute>\n          <PublicRoute\n            path={routes.register}\n            restricted\n            redirectTo={routes.contacts}\n            component={RegisterView}\n          />\n          <PublicRoute\n            path={routes.login}\n            restricted\n            redirectTo={routes.contacts}\n          >\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute\n            path={routes.contacts}\n            redirectTo={routes.login}>\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\n\n\n\n// Without hooks\n\n// import React, { Component, Suspense, lazy } from 'react';\n// import { Switch } from 'react-router-dom';\n// import Container from '../Container';\n// import AppBar from '../AppBar/AppBar.js';\n// import {routes} from '../../routes';\n// import { authOperations } from '../../redux/auth';\n// import { connect } from 'react-redux';\n// import PrivateRoute from '../PrivateRoute';\n// import PublicRoute from '../PublicRoute';\n// import s from '../Container/Container.module.css';\n\n// const HomeView = lazy(() => import('../../views/HomeView/HomeView.js'));\n// const RegisterView = lazy(() => import('../../views/RegisterView/RegisterView.js'));\n// const LoginView = lazy(() => import('../../views/LoginView/LoginView.js'));\n// const ContactsView = lazy(() => import('../../views/ContactsView/ContactsView.js'));\n\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.onGetCurrentUser();\n//   }\n\n//   render() {\n//     return (\n//       <Container>\n//         <AppBar />\n\n//         <Suspense fallback={<p className={s.loading}>Loading...</p>}>\n//           <Switch>\n//             <PublicRoute exact path={routes.home} component={HomeView} />\n//             <PublicRoute\n//               path={routes.register}\n//               restricted\n//               redirectTo={routes.contacts}\n//               component={RegisterView}\n//             />\n//             <PublicRoute\n//               path={routes.login}\n//               restricted\n//               redirectTo={routes.contacts}\n//               component={LoginView}\n//             />\n//             <PrivateRoute\n//               path={routes.contacts}\n//               redirectTo={routes.login}\n//               component={ContactsView}\n//             />\n//           </Switch>\n//         </Suspense>\n//       </Container>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}